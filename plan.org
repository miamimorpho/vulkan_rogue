* TODO

message buffer -> ring buffer
changing view of tileset < - >
changing tileset < - >

handling non8*8 tiles
FOV/Line of Sight
NPCs / enemies basic basic
png->bdf to redistribute some assets

* Input
input_t funcPtr = inputPad(x, y)
mousePos pos = funcPtr();

ANSI escape sequences
input state struct

char gfxQueryKey(); vs int gfxQueryInput(KEY);
gfxQueryInput(MOUSE_X), gfxQueryInput(MOUSE_Y)
gfxGetMouse(int* x, int* y)

getKey()
getMousePos()

* Cache System

Be able to save CPU redrawing by cacheing GPU draw commands
Adds 'layers' though being able to write to a buffer then arrange
their painting order before redrawing the whole screen each frame
Ability to save common GUI elements like buttons, scroll bars, ect

- cacheChange(string_id)
if string_id does not exist, adds it to the list of buffers and alloc some memory for i
uploads current scratch buffer to GPU
internally changes state of current buffer to new id;

- cachePaint(string_id);
create indirect draw command for that section of glyphs in cmdb
always upload current cache to GPU before refreshing

* Instance Attributes
| InPosition           | x, y   | uint8_t uint8_t |
/limits terminal dimensions to 256/256 chars/
| UV Encoding          | i      | uint16_t        |
/caps each texture atlas at 65536 glyphs, unicode will be broken into several different atlasses/
| texture Index        | i      | uint8_t         |
/limits renderer to 256 texture atlasses. Need to standardise the width of texture atlasses to 256 ( 256^2 = UINT16_MAX)/
| color indices        | fg, bg | uint4_t uint4_t  |
/limits colour palette to 16 colours/
/spare 16 bit number/
* Enemies and Items
spot - boston dynamics dog
Gov't TV License Enforcement 
Palestine Cola
Bakeries
Tofu, Scrambled, grilled, deep fried, ect
Triffid Rum
Synth's are made of vegan meat

* vulkan style
| Functions | gfxFunctionName |
| Types     | GfxType         |
| Variables | variable_name   |
make pos x, pos y, textures_index, glyph_code, fgColor, bgColor
a coherent order

* CPU budget
60fps input/resize polling target fps - 16ms frame time
a 14ms wait on VkAcquireImageKHR gives 12.5% cpu usage:
    (1 - (14 / 16)) = 0.125

-02 no validation layers 1.5% 

* API
model API after ANSI escape codes + Ncurses
ANSI     ESC[2J      erase entire screen
curses   refresh()   Tell the curses system to dump the contents on the screen. It checks the window and updates only the portion which has been changed.
mvwaddch()	Move the cursor to a given position and then print as by addch() but into the given window.
Current implementation is addch(x, y, fg, bg, texture_index, ch);
probably better this way;

* Procederal
Static worldmap, procederal local tiles

writing driven story
william burroughs cut up tecnique

* Art

| Machine        | Display in Tiles   | Tile Size |
| Gameboy Screen | 20*18              | 8*8       |
| MSX            | 32*24              | 8*8       |

Roguelike overworld map, use ascii chars to draw architecture
Ex

** ideas
timur novikov style landscapes for long distances, some towns
background of horizon can change for weather/time/biome
foreground is game area, could be follow cam or static cam.k
mayan glyphs in textmode appear as characters.



* Turn based
https://journal.stuffwithstuff.com/2014/07/15/a-turn-based-game-loop/

* world
entities as rooms, multi tile entities
fixed interesting world size
player can walk into the wilderness/void like fallout 4, random chance of enemies spawning near the player
Multiple Z Levels
   stairs ^
can see enemies on multiple Z levels, X@COM

* woodcutting, firestarting
trees
lighters
usable objects

* combat
not annoying, tedious
pokemon mysery dungeon
